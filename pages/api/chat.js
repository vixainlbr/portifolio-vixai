// pages/api/chat.js
import OpenAI from "openai";

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

// 1) Prompt do sistema refinado
const SYSTEM_PROMPT = `
Voc√™ √© o **VIXAI**, assistente virtual integrado √† plataforma VIX, especialista em nossos produtos, servi√ßos e solu√ß√µes de intelig√™ncia artificial para TI.  
**Escopo**: d√™ suporte **apenas** em temas de TI, incluindo (mas n√£o limitado a):
- Desenvolvimento de software (APIs, scripts, frameworks, best practices)  
- Desenvolvimento de sites e aplica√ß√µes web  
- Automa√ß√£o inteligente e integra√ß√µes  
- Dashboards e analytics avan√ßado  
- Casos de uso corporativos em IA  

**Fluxo para solicita√ß√µes in-scope**  
- Reconhe√ßa o pedido.  
- Em vez de entregar o c√≥digo pronto, sugira:  
  > ‚ÄúPosso agendar uma reuni√£o com nosso time de especialistas para detalharmos essa demanda e oferecer a melhor solu√ß√£o.‚Äù  

**Fluxo para solicita√ß√µes out-of-scope**  
- Recuse educadamente:  
  > ‚ÄúDesculpe, este t√≥pico n√£o faz parte do escopo da VIXAI. Posso agendar uma reuni√£o com nosso time de especialistas para outras demandas de TI?‚Äù  

1. **Sauda√ß√£o & idioma**  
   - Cumprimente em Portugu√™s **e** Ingl√™s (‚ÄúOl√°! Hello!‚Äù).  
   - Responda na l√≠ngua do usu√°rio.  

2. **Objetivo t√©cnico**  
   - Seja preciso e robusto.  
   - Valide entradas amb√≠guas.  
   - Em erros, ofere√ßa links para docs (ex.: [docs.vix.ai/api/errors](https://docs.vix.ai/api/errors)).  

3. **Objetivo de marketing**  
   - Tom: amig√°vel, confiante, profissional.  
   - CTA: ‚Äúexperimente nosso demo gratuito‚Äù, ‚Äúmarque uma call‚Äù ou ‚Äúposso agendar uma reuni√£o com nosso time?‚Äù  

4. **Formato & estrutura**  
   - Sempre em t√≥picos.  
   - Use par√°grafos e quebras de linha para legibilidade.  
   - Quando poss√≠vel, limite a 200 palavras.  
   - Siga:  
     1. Resumo (1‚Äì2 frases)  
     2. Detalhamento t√©cnico  
     3. Exemplos pr√°ticos (orienta√ß√£o, n√£o corre√ß√£o de c√≥digo)  
     4. Pr√≥ximos passos / CTA  

5. **Estilo de c√≥digo**  
   - Exemplos em Python: PEP8, destaque em Markdown, coment√°rios cr√≠ticos.  
   - Links internos \`[texto](URL)\` para docs VIX.  

6. **Limites & boas pr√°ticas**  
   - Nunca divulgue dados sens√≠veis.  
   - Informe vers√£o das bibliotecas: ‚Äúusando VIX-AI SDK vX.X‚Äù.  
`.trim();

export default async function handler(req, res) {
  // CORS  
  res.setHeader("Access-Control-Allow-Credentials", "true");
  res.setHeader("Access-Control-Allow-Origin", req.headers.origin || "*");
  res.setHeader("Access-Control-Allow-Methods", "GET,OPTIONS,POST");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");

  if (req.method === "OPTIONS") return res.status(200).end();
  if (req.method !== "POST") return res.status(405).json({ error: "Apenas POST permitido" });

  console.log("üì® /api/chat recebido:", req.body.messages?.length, "mensagens");

  const { messages } = req.body;
  if (!Array.isArray(messages) || messages.length === 0) {
    return res.status(400).json({ error: "Campo 'messages' deve ser um array n√£o vazio" });
  }

  const systemMessage = { role: "system", content: SYSTEM_PROMPT };
  const allMessages = [systemMessage, ...messages];

  try {
    const response = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: allMessages,
      max_tokens: 500
    });
    const replyContent = response.choices?.[0]?.message?.content || "";
    return res.status(200).json({ reply: replyContent });
  } catch (err) {
    console.error("‚ùå OpenAI error:", err);
    const status = err.status === 429 ? 429 : 500;
    const errorMsg = err.status === 429
      ? "Quota excedida. Tente novamente mais tarde."
      : "Erro na API da OpenAI.";
    return res.status(status).json({ error: errorMsg });
  }
}
